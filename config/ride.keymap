/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/led/led.h>

#define DEFAULT 0
#define COLEMAK_DH 1
#define WINDOWS 2
#define RISE 3
#define LOWER 4
#define NAVI 5

/ {
	behaviors {
		compatible = "zmk,behavior-press";
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <3 4>;
			then-layer = <5>;
		};
	};
	
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ----------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | BSCP |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | TAB   |  Z  |  X  |  C   |  V   |  B   |                                          |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                          | LWIN  | RISE  |  SPACE  |   ENTER   |   |   LCTRL  |  SPACE/LALT  | LOWER  | RALT  |
			bindings = <
	&kp ESC &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I &kp O &kp P &kp BSPC
	&kp LSHFT &kp A &kp S &kp D &kp F &kp G                                              &kp H &kp J  &kp K &kp L &kp SEMI &mt RSHIFT SQT
	&kp TAB &kp Z &kp X &kp C &kp V &kp B                                                &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                         &kp LWIN &mo RISE &kp SPACE &kp ENTER        &kp LCTRL  &mt LALT SPACE  &mo LOWER &kp RALT
			>;
		};

		colemak_dh {
// ----------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  F   |  P   |  B   |                                          |  J   |  L    |  U    |  Y   |   ;   | BSCP |
// | SHIFT |  A  |  R  |  S   |  T   |  G   |                                          |  M   |  N    |  E    |  I   |   O   |   '  |
// | TAB   |  Z  |  X  |  C   |  D   |  V   |                                          |  K   |  H    |  ,    |  .   |   /   | SHIFT |
//                          | LWIN  | RISE  |  SPACE  |   ENTER   |   |   ESC  |  SPACE/LALT  | LOWER  | RALT  |
			bindings = <
	&kp ESC &kp Q &kp W &kp F &kp P &kp B                                                &kp J &kp L  &kp U &kp Y &kp SEMI &kp BSPC
	&kp LSHFT &kp A &kp R &kp S &kp T &kp G                                              &kp M &kp N  &kp E &kp I &kp O &kp SQT
	&kp TAB &kp Z &kp X &kp C &kp D &kp V                                                &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
	                         &kp LCTRL &mo RISE &kp SPACE &kp ENTER        &kp LWIN  &mt LALT SPACE  &mo LOWER &kp RALT
			>;
		};

		windows_layer {
// ----------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | BSCP |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | TAB   |  Z  |  X  |  C   |  V   |  B   |                                          |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                          | LCTRL  | RISE  |  SPACE  |   ENTER   |   |   LWIN  |  SPACE/LALT  | LOWER  | RALT  |
			bindings = <
	&kp ESC &kp Q &kp W &kp E &kp R &kp T                                                &kp Y &kp U  &kp I &kp O &kp P &kp BSPC
	&kp LSHFT &kp A &kp S &kp D &kp F &kp G                                              &kp H &kp J  &kp K &kp L &kp SEMI &mt RSHIFT SQT
	&kp TAB &kp Z &kp X &kp C &kp V &kp B                                                &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                         &kp LCTRL &mo RISE &kp SPACE &kp ENTER        &kp LWIN  &mt LALT SPACE  &mo LOWER &kp RALT
			>;
		};
   
      rise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  F12  |  1  |  2    |  3  |  4     |  5 |                                          |  6   |  7    |  8    |  9   |   10  | BSCP |
// | SHIFT |  A  |INSERT | HOME| PGUP   |  G |                                          | LEFT | DOWN  |  UP   | RIGHT|   ;   |   '  |
// | `/~   |  Z  |DELETE | END | PGDOWN |  B |                                          |  N   |  M    |  ,    |  .   |   \   | CTRL |
//                          | LWIN  | RISE  |  SPACE   |   ENTER   |   |   LCTRL  |  SPACE/LALT  | LOWER  | RALT  |
			bindings = <
	&kp F12 &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                           &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
	&kp LSHFT &kp A &kp INS &kp HOME &kp PG_UP &kp G                                     &kp LEFT &kp DOWN &kp UP &kp RIGHT &kp SEMI &kp SQT
	&kp GRAVE &kp Z &kp DEL &kp END &kp PG_DN &kp B                                      &kp N &kp M &kp COMMA &kp DOT &kp BSLH &kp RCTRL
	                         &kp LWIN &mo RISE &kp SPACE &kp ENTER        &kp LCTRL  &mt LALT SPACE  &mo LOWER &kp RALT
			>;
		};

      lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  !  |  @  |  #   |  $   |  %     |                                       |  ^   |  &    |  *    |  (   |   )   | BSCP |
// | SHIFT |  A  |  S  |  D   |  F   |CAPSLOCK|                                       |  -   |  =    |  {    |  }   |   |   |   '  |
// | ~     |  Z  |  X  |  C   |  V   |  B     |                                       |  _   |  +    |  [    |  ]   |   \   | CTRL |
//                          | LWIN  | RISE  |  SPACE  |   ENTER   |   |   LCTRL  |  SPACE/LALT  | LOWER  | RALT  |
			bindings = <
	&kp ESC &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                                  &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
	&kp LSHFT &kp A &kp S &kp D &kp F &kp CAPSLOCK                                       &kp MINUS &kp EQUAL &kp LBRC &kp RBRC &kp PIPE  &mt LALT SPACE
	&kp TILDE &kp Z &kp X &kp C &kp V &kp B                                              &kp UNDER &kp PLUS &kp LBKT &kp RBKT &kp BSLH &kp RCTRL
	                         &kp LWIN &mo RISE &kp SPACE &kp ENTER        &kp LCTRL  &mt LALT SPACE  &mo LOWER &kp RALT
			>;
		};

			navi_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | --- |BT_D1 |BT_D2 |BT_D3 |BT_D4 |BT_D5 |                                    | F1  | F2  | F3  | F4  | F5 | F6 |
// | - | - | DEFAULT | COLEMAK_DH | BT_clear | out_toggle |                      | F7  | F8 | F9 | F10 | F11 | F12 |
// | --- | --- | --- | ---  | ---  |  --- |                                      | --- | previous | play/pause | next | --- | ---|
//                          |   | RISE  |    |    |   |    |    | LOWER  |   |
			bindings = <
	&trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
	&trans &trans &tog WINDOWS &tog COLEMAK_DH &bt BT_CLR &out OUT_TOG         &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
	&trans &trans &trans &trans &trans &trans                                  &trans &kp C_PREV &kp C_PP &kp C_NEXT &trans &trans
	                         &trans &mo RISE &trans &trans       &trans  &trans  &mo LOWER &trans
			>;
		};
	};
};